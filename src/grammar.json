{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "factor",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_declaration"
      }
    },
    "_declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "definition"
        },
        {
          "type": "SYMBOL",
          "name": "_top_level_form"
        }
      ]
    },
    "definition": {
      "type": "STRING",
      "value": "definition_NOT_IMPLEMENTED"
    },
    "_top_level_form": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "unary_postfix"
        },
        {
          "type": "SYMBOL",
          "name": "quote"
        }
      ]
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "ratio"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        }
      ]
    },
    "float": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[-+]?(\\d+[-+])?\\d+\\/\\d+\\."
        },
        {
          "type": "PATTERN",
          "value": "[-+]?\\d+(\\.\\d+)?[eE][-+]?\\d+"
        },
        {
          "type": "PATTERN",
          "value": "[-+]?\\d+\\.\\d*"
        }
      ]
    },
    "_exp": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "[eE]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_sign"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_b10"
        }
      ]
    },
    "ratio": {
      "type": "PATTERN",
      "value": "[-+]?(\\d+[-+])?\\d+\\/\\d+"
    },
    "integer": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "base10"
        },
        {
          "type": "SYMBOL",
          "name": "base16"
        },
        {
          "type": "SYMBOL",
          "name": "base08"
        },
        {
          "type": "SYMBOL",
          "name": "base02"
        }
      ]
    },
    "_sign": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        }
      ]
    },
    "base10": {
      "type": "PATTERN",
      "value": "[-+]?(\\d+|\\d{1,3}([,_]\\d{3})+)"
    },
    "_b10": {
      "type": "PATTERN",
      "value": "(\\d+|\\d{1,3}([,_]\\d{3})+)"
    },
    "base16": {
      "type": "PATTERN",
      "value": "[-+]?0[xX]([\\da-fA-F]+|[\\da-fA-F]{1,3}([,_][\\da-fA-F]{3})+)"
    },
    "base08": {
      "type": "PATTERN",
      "value": "[-+]?0[oO]([0-7]+|[0-7]{1,3}([,_][0-7]{3})+)"
    },
    "base02": {
      "type": "PATTERN",
      "value": "[-+]?0[bB]([01]+|[01]{1,3}([,_][01]{3})+)"
    },
    "unary_postfix": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unary_op"
        },
        {
          "type": "SYMBOL",
          "name": "word"
        }
      ]
    },
    "unary_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "\\"
        },
        {
          "type": "STRING",
          "value": "POSTPONE:"
        }
      ]
    },
    "word": {
      "type": "PATTERN",
      "value": "\\S+"
    },
    "quote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_top_level_form"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
